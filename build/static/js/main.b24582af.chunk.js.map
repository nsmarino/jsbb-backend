{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","axios","get","then","response","data","newObject","post","id","put","Notification","message","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","toggleImportanceOf","find","n","changedNote","returnedNote","map","catch","error","setTimeout","key","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"mNAWeA,EATF,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,iBACbC,EAAQF,EAAKG,UAAY,qBAAuB,iBACpD,OACE,wBAAIC,UAAU,QAAQJ,EAAKK,QACzB,4BAAQC,QAASL,GAAmBC,K,gBCY7B,EAfA,WAEb,OADgBK,IAAMC,IAHR,cAICC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KARR,aAQsBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAEhB,OADgBL,IAAMQ,IAAN,UAbJ,aAaI,YAAwBD,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,8NCX7C,IAAMK,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,yBAAKb,UAAU,SACZa,IA0FUC,EArFL,WAAO,IAAD,EAEUC,mBAAS,IAFnB,mBAETC,EAFS,KAEFC,EAFE,OAGcF,mBAAS,IAHvB,mBAGTG,EAHS,KAGAC,EAHA,OAIcJ,oBAAS,GAJvB,mBAITK,EAJS,KAIAC,EAJA,OAKwBN,mBAAS,MALjC,mBAKTO,EALS,KAKKC,EALL,KAOhBC,qBAAU,WACRC,IACCpB,MAAK,SAAAqB,GACFT,EAASS,QAEZ,IAEH,IAAMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAAAhC,GAAI,OAAIA,EAAKG,aAE1D8B,EAAqB,SAAAnB,GACzB,IAAMd,EAAOoB,EAAMc,MAAK,SAAAC,GAAC,OAAIA,EAAErB,KAAOA,KAChCsB,E,yWAAW,IAAQpC,EAAR,CAAcG,WAAYH,EAAKG,YAEhD0B,EACUf,EAAIsB,GACX3B,MAAK,SAAA4B,GACNhB,EAASD,EAAMkB,KAAI,SAAAtC,GAAI,OAAIA,EAAKc,KAAOA,EAAKd,EAAOqC,SAEpDE,OAAM,SAAAC,GACLb,EAAgB,SAAD,OACJ3B,EAAKK,QADD,sCAGfoC,YAAW,WACTd,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAG,GAAC,OAAIA,EAAErB,KAAOA,UA+BtC,OACE,6BACE,qCAEA,kBAAC,EAAD,CAAcG,QAASS,IAEvB,6BACE,4BAAQpB,QAAS,kBAAMmB,GAAYD,KAAnC,QACMA,EAAU,YAAc,QAGhC,4BAtCaO,EAAYO,KAAK,SAAAtC,GAAI,OACtC,kBAAC,EAAD,CACE0C,IAAK1C,EAAKc,GACVd,KAAMA,EACNC,iBAAoB,kBAAMgC,EAAmBjC,EAAKc,WAqChD,0BAAM6B,SAlCI,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBzC,QAASiB,EACTyB,MAAM,IAAIC,MAAOC,cACjB9C,UAAW+C,KAAKC,SAAW,IAG7BtB,EACQiB,GACLrC,MAAK,SAAA4B,GACNhB,EAASD,EAAMgC,OAAOf,IACtBd,EAAW,SAuBP,2BAAO8B,MAAO/B,EAASgC,SAnBN,SAACV,GACxBrB,EAAWqB,EAAMW,OAAOF,UAmBlB,4BAAQG,KAAK,UAAb,W,MCpEVC,IAASC,OACP,kBAAC,EAAD,CAAKtC,MAtBO,CACZ,CACEN,GAAI,EACJT,QAAS,eACT0C,KAAM,2BACN5C,WAAW,GAEb,CACEW,GAAI,EACJT,QAAS,sCACT0C,KAAM,2BACN5C,WAAW,GAEb,CACEW,GAAI,EACJT,QAAS,+DACT0C,KAAM,2BACN5C,WAAW,MAMbwD,SAASC,eAAe,W","file":"static/js/main.b24582af.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({note, toggleImportance}) => {\r\n  const label = note.important ? 'make not important' : 'make important'\r\n    return (\r\n      <li className='note'>{note.content}\r\n        <button onClick={toggleImportance}>{label}</button>\r\n      </li>\r\n    )\r\n  }\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('') \r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    noteService.getAll()\r\n    .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }, [])\r\n\r\n  const notesToShow = showAll ? notes : notes.filter(note => note.important)\r\n  \r\n  const toggleImportanceOf = id => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n  \r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n    })\r\n    .catch(error => {\r\n      setErrorMessage(\r\n        `Note '${note.content}' was already removed from server`\r\n      )\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n      setNotes(notes.filter(n => n.id !== id))\r\n    })\r\n  }\r\n\r\n  const rows = () => notesToShow.map( note => \r\n    <Note \r\n      key={note.id} \r\n      note={note}\r\n      toggleImportance = {() => toggleImportanceOf(note.id)}\r\n       /> )\r\n  \r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() > 0.5,\r\n    }\r\n    \r\n    noteService\r\n    .create(noteObject)\r\n      .then(returnedNote => {\r\n      setNotes(notes.concat(returnedNote))\r\n      setNewNote('')\r\n      })\r\n  }\r\n\r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n    return (\r\n      <div>\r\n        <h1>Notes</h1>\r\n\r\n        <Notification message={errorMessage} />\r\n\r\n        <div>\r\n          <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all'}\r\n          </button>\r\n        </div>\r\n        <ul>\r\n          {rows()}\r\n        </ul>\r\n        <form onSubmit={addNote}>\r\n          <input value={newNote} onChange={handleNoteChange}/>\r\n          <button type=\"submit\">save</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\nconst notes = [\n  {\n    id: 1,\n    content: 'HTML is easy',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true\n  },\n  {\n    id: 2,\n    content: 'Browser can execute only Javascript',\n    date: '2019-05-30T18:39:34.091Z',\n    important: false\n  },\n  {\n    id: 3,\n    content: 'GET and POST are the most important methods of HTTP protocol',\n    date: '2019-05-30T19:20:14.298Z',\n    important: true\n  }\n]\n\nReactDOM.render(\n  <App notes={notes} />,\n  document.getElementById('root')\n)"],"sourceRoot":""}